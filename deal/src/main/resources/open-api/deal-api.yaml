openapi: "3.0.0"
info:
  version: '1'
  title: Credit conveyor API
servers:
  - url: http://localhost:8081
paths:
  /deal/application:
    post:
      summary: Calculation of possible loan offers
      operationId: getListOfPossibleLoanOffers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestDTO'
      responses:
        200:
          description: Possible loan terms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanOfferDTO'
  /deal/offer:
    put:
      summary: Offer selection
      operationId: choiceLoanOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanOfferDTO'
      responses:
        200:
          description: Offer selected
  /deal/calculate/{applicationId}:
    parameters:
      - $ref: '#/components/parameters/ApplicationId'
    put:
      summary: Full credit calculation
      operationId: calculatedLoanParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishRegistrationRequestDTO'
      responses:
        200:
          description: Loan terms

  /deal/document/sendMessage/test:
    post:
      summary: Request to send message
      operationId: toSendMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailMessage'
      responses:
        200:
          description: Request sent

  /deal/document/{applicationId}/send:
    parameters:
      - $ref: '#/components/parameters/ApplicationId'
    post:
      summary: Request to send documents
      operationId: sendDocuments
      responses:
        200:
          description: Request sent

  /deal/document/{applicationId}/sign:
    parameters:
      - $ref: '#/components/parameters/ApplicationId'
    post:
      summary: Request to sign documents
      operationId: signDocuments
      responses:
        200:
          description: Request sent

  /deal/document/{applicationId}/code:
    parameters:
      - $ref: '#/components/parameters/ApplicationId'
    post:
      summary: Signing of documents
      operationId: sendCode
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Documents signed

components:
  parameters:
    ApplicationId:
      name: applicationId
      in: path
      required: true
      schema:
        type: integer
        format: int64

  schemas:
    LoanApplicationRequestDTO:
      type: object
      required:
        - amount
        - term
        - firstName
        - lastName
        - middleName
        - email
        - birthdate
        - passportSeries
        - passportNumber
      properties:
        amount:
          type: number
          format: double
          example: 700000
          minimum: 10000
        term:
          type: integer
          example: 60
          minimum: 6
        firstName:
          type: string
          example: Иван
          pattern: '[а-яА-Я]{2,30}'
        lastName:
          type: string
          example: Иванов
          pattern: '[а-яА-Я]{2,30}'
        middleName:
          type: string
          example: Иванович
          pattern: '[а-яА-Я]{2,30}'
        email:
          type: string
          example: ivanov_86@gmail.com
          pattern: '[\w\.]{2,50}@[\w\.]{2,20}'
        birthdate:
          type: string
          format: date
          example: 1986-11-06
          pattern: '\d{4}-[01]\d{1}-[0123]\d{1}'
        passportSeries:
          type: string
          example: 3619
          pattern: '\d{4}'
        passportNumber:
          type: string
          example: 725693
          pattern: '\d{6}'

    LoanOfferDTO:
      type: object
      required:
        - applicationId
        - requestedAmount
        - totalAmount
        - term
        - monthlyPayment
        - rate
        - isInsuranceEnabled
        - isSalaryClient
      properties:
        applicationId:
          type: integer
          format: int64
          example: 1001
        requestedAmount:
          type: number
          format: double
          example: 700000
        totalAmount:
          type: number
          format: double
          example: 700000
        term:
          type: integer
          example: 60
        monthlyPayment:
          type: number
          format: double
          example: 45000
        rate:
          type: number
          format: double
          example: 12,1
        isInsuranceEnabled:
          type: boolean
          example: false
        isSalaryClient:
          type: boolean
          example: true

    ScoringDataDTO:
      type: object
      required:
        - amount
        - term
        - firstName
        - lastName
        - middleName
        - gender
        - birthdate
        - passportSeries
        - passportNumber
        - passportIssueDate
        - passportIssueBranch
        - maritalStatus
        - dependentAmount
        - employment
        - account
        - isInsuranceEnabled
        - isSalaryClient
      properties:
        amount:
          type: number
          format: double
          example: 700000
        term:
          type: integer
          example: 60
        firstName:
          type: string
          example: 'Ivan'
        lastName:
          type: string
          example: 'Ivanov'
        middleName:
          type: string
          example: 'Ivanovich'
        gender:
          type: string
          enum:
            - 'MALE'
            - 'FEMALE'
            - 'NON_BINARY'
          example: 'MALE'
        birthdate:
          type: string
          format: date
          example: 1986-11-06
        passportSeries:
          type: string
          example: '3619'
        passportNumber:
          type: string
          example: '725693'
        passportIssueDate:
          type: string
          format: date
          example: '30.12.2015'
        passportIssueBranch:
          type: string
          example: 'Ленинградская область'
        maritalStatus:
          type: string
          enum:
            - 'MARRIED'
            - 'DIVORCED'
            - 'SINGLE'
            - 'WIDOW_WIDOWER'
          example: 'MARRIED'
        dependentAmount:
          type: integer
          example: 100000
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
          example: '536263827462'
        isInsuranceEnabled:
          type: boolean
          example: true
        isSalaryClient:
          type: boolean
          example: false

    CreditDTO:
      type: object
      required:
        - amount
        - term
        - monthlyPayment
        - rate
        - psk
        - isInsuranceEnabled
        - isSalaryClient
        - paymentSchedule
      properties:
        amount:
          type: number
          format: double
          example: 700000
        term:
          type: integer
          example: 60
        monthlyPayment:
          type: number
          format: double
          example: 55000
        rate:
          type: number
          format: double
          example: 12
        psk:
          type: number
          format: double
          example: 12.2
        isInsuranceEnabled:
          type: boolean
          example: false
        isSalaryClient:
          type: boolean
          example: true
        paymentSchedule:
          type: array
          items:
            $ref: '#/components/schemas/PaymentScheduleElement'

    EmploymentDTO:
      type: object
      required:
        - employmentStatus
        - employerINN
        - salary
        - position
        - workExperienceTotal
        - workExperienceCurrent
      properties:
        employmentStatus:
          type: string
          enum:
            - 'UNEMPLOYED'
            - 'SELF_EMPLOYED'
            - 'EMPLOYED'
            - 'BUSINESS_OWNER'
          example: 'EMPLOYED'
        employerINN:
          type: string
          example: '827461927'
        salary:
          type: number
          format: double
          example: 90000
        position:
          type: string
          enum:
            - 'WORKER'
            - 'MID_MANAGER'
            - 'TOP_MANAGER'
            - 'OWNER'
          example: 'WORKER'
        workExperienceTotal:
          type: integer
          example: 18
        workExperienceCurrent:
          type: integer
          example: 6

    PaymentScheduleElement:
      type: object
      required:
        - number
        - date
        - totalPayment
        - interestPayment
        - debtPayment
        - remainingDebt
      properties:
        number:
          type: integer
          example: 1
        date:
          type: string
          format: date
          example: '15.03.2022'
        totalPayment:
          type: number
          format: double
          example: 700000
        interestPayment:
          type: number
          format: double
          example: 30000
        debtPayment:
          type: number
          format: double
          example: 15000
        remainingDebt:
          type: number
          format: double
          example: 655000

    FinishRegistrationRequestDTO:
      type: object
      required:
        - gender
        - maritalStatus
        - dependentAmount
        - passportIssueDate
        - passportIssueBrach
        - employment
        - account
      properties:
        gender:
          $ref: '#/components/schemas/ScoringDataDTO/gender'
        maritalStatus:
          type: string
          enum:
            - 'MARRIED'
            - 'DIVORCED'
            - 'SINGLE'
            - 'WIDOW_WIDOWER'
          example: 'MARRIED'
        dependentAmount:
          type: integer
          example: 2
        passportIssueDate:
          type: string
          format: date
          example: 2020-12-07
        passportIssueBrach:
          type: string
          example: '605-234'
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
          example: '536263827462'

    EmailMessage:
      type: object
      required:
        - address
        - theme
        - applicationId
      properties:
        address:
          type: string
          example: 'ivanov_93@gmail.com'
        theme:
          type: string
          enum:
            - FINISH-REGISTRATION
            - CREATE-DOCUMENTS
            - SEND-DOCUMENTS
            - SEND-SES
            - CREDIT-ISSUED
            - APPLICATION-DENIED
          example: SEND-DOCUMENTS
        applicationId:
          type: integer
          format: int64
          example: 1001